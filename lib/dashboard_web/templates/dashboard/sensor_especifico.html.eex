<script src="<%= static_path(@conn, "/js/chart.min.js") %>"></script>

<div class="col-sm-9 col-sm-offset-3 col-lg-10 col-lg-offset-2 main">
	<div class="row">
		<ol class="breadcrumb">
			<li><a href="#">
				<em class="fa fa-home"></em>
			</a></li>
			<li class="active">Dashboard / Sensores / <%= @sensor.id %> </li>
		</ol>
	</div><!--/.row-->
	<div class="row">
		<div class="col-lg-12">
			<h1 class="page-header"><%= @sensor.id %></h1>
		</div>
	</div><div class="panel-body">
    <div class="canvas-wrapper">
        <canvas class="main-chart" id="line-chart" height=300 width=600></canvas>
    </div>
</div>
<script>
    var lineChartData = {
        labels: [],
		datasets : [
			{
				label: "<%= @sensor.nome %>" ,
				fillColor : "rgba(220,220,220,0.2)",
				strokeColor : "rgba(220,220,220,1)",
				pointColor : "rgba(220,220,220,1)",
				pointStrokeColor : "#fff",
				pointHighlightFill : "#fff",
				pointHighlightStroke : "rgba(220,220,220,1)",
				data : []
			}
		]

    }
    var chart1 = document.getElementById("line-chart").getContext("2d");
	window.myLine = new Chart(chart1).Line(lineChartData, {
	responsive: true,
	scaleLineColor: "rgba(0,0,0,.2)",
	scaleGridLineColor: "rgba(0,0,0,.05)",
	scaleFontColor: "#c5c7cc"
	});
</script>
<script src="<%= static_path(@conn, "/js/sensor_socket_specific.js") %>"></script> 

    let socket = new phoenix.Socket("/sensor_stream", {params: {}})

    socket.connect()

    // Now that you are connected, you can join channels with a topic:
    let channel = socket.channel("sensor_broadcast:all", {})
    channel.join()
    .receive("ok", resp => { console.log("Joined successfully", resp) })
    .receive("error", resp => { console.log("Unable to join", resp) })

    channel.on("new_value", payload =>
    {
        myLine.addData(payload.valor, Date.now())
    });

</script>